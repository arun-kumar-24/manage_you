// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  Low
  Medium
  High
}

model User {
  id         String          @id @default(uuid())
  email      String          @unique
  name       String
  tasks      Task[]
  categories TaskCategory[]
  schedules  ScheduledTask[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model Task {
  id          String          @id @default(uuid())
  userId      String
  user        User            @relation(fields: [userId], references: [id])
  title       String
  description String?
  priority    Priority        @default(Low)
  isCompleted Boolean         @default(false)
  categoryId  String?
  category    TaskCategory?   @relation(fields: [categoryId], references: [id])
  createdAt   DateTime        @default(now())
  deadline    DateTime?
  schedules   ScheduledTask[]

  @@index([userId])
  @@index([categoryId])
  @@index([isCompleted])
}

model TaskCategory {
  id        String   @id @default(uuid())
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  tasks     Task[]
  createdAt DateTime @default(now())

  @@index([userId])
}

model ScheduledTask {
  id            String   @id @default(uuid())
  taskId        String
  task          Task     @relation(fields: [taskId], references: [id])
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  fromTime      DateTime
  toTime        DateTime
  scheduledDate DateTime
  createdAt     DateTime @default(now())

  @@index([userId])
  @@index([scheduledDate])
}
